@startuml
title 《清式建筑自动建模系统》架构类图（简化整合版）

'======================
' 配置层
'======================
package "configs" #LightYellow {
    class ConfigManager {
        +load_settings()
        +get_system_template()
    }

    class BuildingClassificationToml
    class BuildingSystemsToml
    class AppSettingsToml
}

'======================
' 数据核心层
'======================
package "core" #LightBlue {
    class DataLoader {
        +load_csv()
        +get_building_data(row_index)
        +get_basic_info()
        +get_structure_info()
        +get_description_info()
        +get_dimension_info()
    }

    class ComponentCalculator {
        +calculate_geometry(dimension_info)
        +generate_grids()
        +get_pillars_coords()
        +get_height_dict()
    }
}

ConfigManager --> DataLoader : "配置文件路径"
DataLoader --> ComponentCalculator : "dimension_info 数据"

'======================
' 几何建模层
'======================
package "structure.components" #LightGreen {
    class Pillar {
        +create_bmesh(diameter, height)
        +to_object()
    }
    class Beam
    class Roof
}

ComponentCalculator --> Pillar : "diameter, height"

'======================
' 系统组合层（Frame）
'======================
package "structure.frame" #LightSkyBlue {
    class PillarFrame {
        +create_from_coords(pillars_coords, component)
    }
    class BeamFrame
    class RoofSystem
}

Pillar --> PillarFrame : "pillar object"
ComponentCalculator --> PillarFrame : "pillars_coords"

'======================
' 装配层
'======================
package "structure" #LightGray {
    class Assembler {
        +build_building()
        +combine_frames()
    }

    class Utils {
        +init_collection(basic_info)
        +get_or_create_mesh(name)
    }
}

PillarFrame --> Assembler : "pillar system list"
BeamFrame --> Assembler
RoofSystem --> Assembler
Utils --> Assembler : "集合与mesh池检查"

'======================
' 主生成控制层
'======================
class Generator {
    +load_data()
    +calculate()
    +assemble()
    +run()
}

Generator --> DataLoader : "加载数据"
Generator --> ComponentCalculator : "计算几何参数"
Generator --> Assembler : "组装建筑"
Assembler --> Utils : "调用集合检查"

@enduml

test_arch/
│
├── configs/                   # 配置参数
│   ├── __init__.py
│   ├── config_manager.py      
│   ├── field_mapping.toml       # csv配置映射
│   ├── building_forms.toml      # 建筑形式配置（包含所有屋顶类型）
│   ├── naming_standard.toml     # 命名标准
│   ├── geometry_rules.toml      # 构件尺寸数据（bmesh）
│   ├── structural_rules.toml    # 结构规则（清代构造法则）
│   └── component_rules.toml     # 构件规则（柱梁檩比例计算）
│
├── data/                        # 数据存储（CSV/XLS）
│   ├── data.csv                 # 园林建筑基本数据，每一行代表一个建筑     
│   └── data2.xls                # 园林建筑基本数据，每一行代表一个建筑     
│
├── core/                       # 核心逻辑
│   ├── __init__.py
│   ├── loader.py              # data数据加载
│   └── calculator.py          # 尺寸计算
│
├── geometry/                     # 底层几何 - 纯bmesh建模
│   ├── pillar.py
│   ├── beam.py
│   ├── roof.py
│   ├── bracket.py
│   └── tenon.py
│   └── wall.py
│ 
├── structure/                    # 构件逻辑 - 对象组合与组装
│   ├── collection.py
│   ├── placement.py
│   ├── assembler.py
│   ├── systems/                  # 系统层（成体系结构）
│   │   ├── pillar_net.py
│   │   ├── beam_frame.py
│   │   ├── roof_system.py
│   │   ├── wall_system.py        # ✅ 新增山墙系统（Wall）
│   │   └── __init__.py
│   ├── components/               # 构件层（基础构件）
│   │   ├── timber/               # 大木作
│   │   │   ├── column.py
│   │   │   ├── beam.py
│   │   │   ├── purlin.py
│   │   │   └── __init__.py
│   │   ├── small_wood/           # 小木作（门窗、隔扇、天花）
│   │   │   ├── door.py
│   │   │   ├── window.py
│   │   │   ├── ceiling.py
│   │   │   └── __init__.py
│   │   ├── masonry/              # 瓦石作（山墙、台基、墙体）
│   │   │   ├── wall_base.py
│   │   │   ├── wall_body.py
│   │   │   ├── wall_roofjoint.py
│   │   │   └── __init__.py
│   │   └── __init__.py
│   └── __init__.py
│
├── utils/                      # 工具函数
│   ├── __init__.py
│   ├── bmesh_utils.py         # bmesh工具
│   └──mesh_pool.py           # 网格对象池
│
├── tests/ 
│   └── test
│
├── generator.py               # 主生成器
├── main.py                    # 程序入口
│
│   ..........................................................
│
├── ai/                              # AI 扩展模块
│   ├── __init__.py
│   ├── param_fitter.py              # 参数拟合（根据数据预测斗口、坡度等）
│   ├── feature_extractor.py         # 特征提取（结构 + 装饰特征）
│   ├── layout_optimizer.py          # 平面与立面布局优化
│   └── style_transfer.py            # 风格迁移（唐/宋/清风格自动调整）
│
├── io/                              # 输入输出层（与外部系统对接）
│   ├── __init__.py
│   ├── ifc_exporter.py              # IFC/BIM 文件导出
│   ├── cad_exporter.py              # DWG/DXF 工程图导出
│   ├── svg_generator.py             # 草图生成（参数线稿）
│   ├── json_io.py                   # JSON、YAML 统一加载器
│   └── dataset_exporter.py          # 导出AI训练数据集
│
├── visualization/                   # 交互与展示层
│   ├── ui_panel.py
│   ├── component_panel.py
│   ├── preset_manager.py
│   ├── preview_renderer.py
│   └── engineering_drawer.py        # 生成工程图（线稿 + 尺寸）


这是一个使用blender api的传统木结构建筑生成项目，以上是项目设计架构，
项目中涉及大量的object\mesh\collection以及园林名称、建筑名称、建筑类型等，尤其是mesh会有大量复用，给我一个规范化的命名规则